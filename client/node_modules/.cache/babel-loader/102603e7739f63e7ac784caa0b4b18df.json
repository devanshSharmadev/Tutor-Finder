{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH } from '../constants/actionType';\nimport * as api from '../Api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/my programs/MERN/Tutor Finder/Program/client/src/actions/profileCard.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","api","getPost","id","dispatch","type","data","fetchPost","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,eAA5D,QAAmF,yBAAnF;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,SAAJ,CAAcJ,EAAd,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,UAAR;AAAoBS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEH;AAAR;AAA7B,KAAD,CAAR;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVI;AAYP,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AAClD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAF;AAAQS,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAAR,QAAiD,MAAMf,GAAG,CAACgB,UAAJ,CAAeH,IAAf,CAA7D;AAEAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,SAAR;AAAmBU,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAF;AAAQS,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAA5B,KAAD,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVI;AAYL,OAAO,MAAMQ,gBAAgB,GAAIC,WAAD,IAAiB,MAAOf,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAR,QAAqB,MAAML,GAAG,CAACmB,kBAAJ,CAAuBD,WAAvB,CAAjC;AAEAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,eAAR;AAAyBQ,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAAlC,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH } from '../constants/actionType';\r\nimport * as api from '../Api/index.js';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n  \r\n      const { data } = await api.fetchPost(id);\r\n  \r\n      dispatch({ type: FETCH_POST, payload: { post: data } });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n  \r\n      dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n      dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n  \r\n      dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n      dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}