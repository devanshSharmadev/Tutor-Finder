{"ast":null,"code":"var _jsxFileName = \"D:\\\\my programs\\\\MERN\\\\Tutor Finder\\\\Program\\\\client\\\\src\\\\components\\\\login\\\\Signin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../../App.css';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport Input from './Input';\nimport useStyles from './Style';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signin } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: ''\n};\n\nconst Signinform = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signin(form, history));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          label: \"Email Address\",\n          handleChange: handleChange,\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          label: \"Password\",\n          handleChange: handleChange,\n          type: showPassword ? \"text\" : \"password\",\n          handleShowPassword: handleShowPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signinform, \"92d23hlIbnqvvWwm+hWqXD4JHU4=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Signinform;\nexport default Signinform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signinform\");","map":{"version":3,"sources":["D:/my programs/MERN/Tutor Finder/Program/client/src/components/login/Signin.jsx"],"names":["React","useState","axios","NotificationContainer","NotificationManager","Avatar","Button","Paper","Grid","Typography","Container","TextField","Input","useStyles","useDispatch","useHistory","signin","initialState","email","password","Signinform","classes","showPassword","setShowPassword","form","setForm","dispatch","history","handleChange","e","setFormData","formData","target","name","value","handleShowPassword","prevShowPassword","handleSubmit","preventDefault","submit"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\r\nimport '../../App.css'\r\nimport axios from 'axios'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport {Avatar,Button,Paper,Grid,Typography,Container, TextField} from '@material-ui/core'\r\nimport Input from './Input'\r\nimport useStyles from './Style'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {signin} from '../../actions/auth'\r\nconst initialState={email:'',password:''}\r\nconst Signinform=()=>{\r\n    const classes=useStyles()\r\n    const [showPassword,setShowPassword]=useState(false)\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n\r\n    const handleChange=(e)=>{\r\n        setFormData({...formData, [e.target.name]:e.target.value})\r\n      }\r\n\r\n      const handleShowPassword=()=>setShowPassword((prevShowPassword)=>!prevShowPassword)\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n          dispatch(signin(form, history));\r\n      };\r\n\r\n    return(\r\n        <>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\r\n              <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword?\"text\":\"password\"} handleShowPassword={handleShowPassword}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                    Sign In\r\n                </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signinform"]},"metadata":{},"sourceType":"module"}