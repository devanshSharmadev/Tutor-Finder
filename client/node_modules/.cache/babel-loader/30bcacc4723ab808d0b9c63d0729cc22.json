{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, COMMENT } from '../constants/actionType';\nimport * as api from '../Api/index.js';\nexport const getPost = (id, user) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    console.log(use);\n    const {\n      data\n    } = await api.fetchPost(id, user);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/my programs/MERN/Tutor Finder/Program/client/src/actions/profileCard.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","COMMENT","api","getPost","id","user","dispatch","type","console","log","use","data","fetchPost","payload","post","error","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","commentPost","value","comment","comments"],"mappings":"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","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, COMMENT } from '../constants/actionType';\r\nimport * as api from '../Api/index.js';\r\n\r\nexport const getPost = (id,user) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      console.log(use)\r\n      const { data } = await api.fetchPost(id,user);\r\n  \r\n      dispatch({ type: FETCH_POST, payload: { post: data } });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n  \r\n      dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n      dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n\r\n      const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n      console.log(data)\r\n      dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n      dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const commentPost = (value, id) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.comment(value, id);\r\n  \r\n      dispatch({ type: COMMENT, payload: data });\r\n  \r\n      return data.comments;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}